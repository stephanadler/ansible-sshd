- name: ensure backports repository is present (APT)
  apt_repository:
    repo: "deb {{ sshd_apt_backports_url }} {{ sshd_apt_backports_distribution }} main"
  when: ansible_pkg_mgr == 'apt'

- name: ensure openssh-server is present (APT)
  apt:
    pkg: openssh-server
    state: latest
    install_recommends: no
    force: yes
    default_release: "{{ sshd_apt_backports_distribution }}"
  notify: restart sshd
  when: ansible_pkg_mgr == 'apt'

- name: ensure openssh-server is present (YUM)
  yum:
    name: openssh-server
    state: latest
  notify: restart sshd
  when: ansible_pkg_mgr == 'yum'

- name: register openssh-server version (APT)
  shell: 'dpkg -s openssh-server | grep "^Version" | sed -re "s/^.*:([0-9]+\.[0-9]+).*/\1/"'
  register: openssh_version
  when: ansible_os_family == 'Debian'

- name: register openssh-server version (YUM)
  shell: 'yum info openssh-server | grep "^Version" | sed -re "s/^.*: ([0-9]+\.[0-9]+).*/\1/"'
  register: openssh_version
  when: ansible_os_family == 'RedHat'

- name: ensure ed25519 host key is present
  command: ssh-keygen -q -t ed25519 -N "" -f ssh_host_ed25519_key
  args:
    chdir: /etc/ssh
    creates: /etc/ssh/ssh_host_ed25519_key
  when: openssh_version.stdout | version_compare('6.5', '>=')

- name: determine if ed25519 host key exists
  stat:
    path: /etc/ssh/ssh_host_ed25519_key
  register: ed25519_key

- name: ensure openssh config is latest
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
  notify: restart sshd

- name: ensure sftp chroot group is present
  group:
    name: "{{ sshd_sftp_chroot_group }}"
  when: sshd_sftp_chroot == 'yes'
